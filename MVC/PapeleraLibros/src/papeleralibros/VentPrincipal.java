/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package papeleralibros;

import DAO.ConectaBBDD;
import DAO.EliminadoDAO;
import DAO.LibroDAO;
import entidades.Eliminado;
import entidades.Libro;
import entidades.Materia;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import listasdatos.ListaDatosEliminados;
import listasdatos.ListaDatosLibros;
import listasdatos.ListaDatosMaterias;

/**
 *
 * @author David
 */
public class VentPrincipal extends javax.swing.JFrame implements Runnable {

    private List<Libro> listaLibros;
    private List<Materia> listaMaterias;
    private List<Eliminado> listaEliminados;
    private int indice;
    private int tamanyoLista;
    private String[] idsMateria;
    private String[] nomsMateria;
    ModeloTablaEliminados modelo;
    
    private String hora, min, sec, dia, mes, anyo, ampm;
    private Thread hilo;
    
    /**
     * Creates new form VentPrincipal
     */
    public VentPrincipal() {
        initComponents();
        
        hilo = new Thread(this);
        hilo.start();
        lb_inf.setText("Papelera libros");
        indice = 0;
        tamanyoLista = 0;
        this.obtenerDatos();
        
        jBt_Primero.setEnabled(false);
        jBt_Anterior.setEnabled(false);
        jComboBox_materias.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelTabLibros = new javax.swing.JPanel();
        jPanel_bts_navegacion = new javax.swing.JPanel();
        jBt_Anterior = new javax.swing.JButton();
        jBt_Siguiente = new javax.swing.JButton();
        jBt_Primero = new javax.swing.JButton();
        jBt_Ultimo = new javax.swing.JButton();
        jPanel_bts_accion = new javax.swing.JPanel();
        jBt_Anyadir = new javax.swing.JButton();
        jBt_Eliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPn_Col1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTF_ISBN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLb_imagen = new javax.swing.JLabel();
        jComboBox_materias = new javax.swing.JComboBox();
        jPn_Col2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTF_Titulo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTA_Descrip = new javax.swing.JTextArea();
        jPanelTabEliminados = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btn_recuperar = new javax.swing.JButton();
        bt_eliminarPermanente = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lb_inf = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lb_hora = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lb_reloj = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Papelera libros");
        setIconImage(getIconImage());
        setResizable(false);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jBt_Anterior.setText("<");
        jBt_Anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_AnteriorActionPerformed(evt);
            }
        });

        jBt_Siguiente.setText(">");
        jBt_Siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_SiguienteActionPerformed(evt);
            }
        });

        jBt_Primero.setText("<<");
        jBt_Primero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_PrimeroActionPerformed(evt);
            }
        });

        jBt_Ultimo.setText(">>");
        jBt_Ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_UltimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_bts_navegacionLayout = new javax.swing.GroupLayout(jPanel_bts_navegacion);
        jPanel_bts_navegacion.setLayout(jPanel_bts_navegacionLayout);
        jPanel_bts_navegacionLayout.setHorizontalGroup(
            jPanel_bts_navegacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_bts_navegacionLayout.createSequentialGroup()
                .addComponent(jBt_Primero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBt_Anterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBt_Siguiente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBt_Ultimo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_bts_navegacionLayout.setVerticalGroup(
            jPanel_bts_navegacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_bts_navegacionLayout.createSequentialGroup()
                .addGroup(jPanel_bts_navegacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBt_Anterior)
                    .addComponent(jBt_Siguiente)
                    .addComponent(jBt_Primero)
                    .addComponent(jBt_Ultimo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBt_Anyadir.setText("AÃ±adir");
        jBt_Anyadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_AnyadirActionPerformed(evt);
            }
        });

        jBt_Eliminar.setText("Eliminar");
        jBt_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBt_EliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_bts_accionLayout = new javax.swing.GroupLayout(jPanel_bts_accion);
        jPanel_bts_accion.setLayout(jPanel_bts_accionLayout);
        jPanel_bts_accionLayout.setHorizontalGroup(
            jPanel_bts_accionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_bts_accionLayout.createSequentialGroup()
                .addComponent(jBt_Anyadir, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBt_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel_bts_accionLayout.setVerticalGroup(
            jPanel_bts_accionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_bts_accionLayout.createSequentialGroup()
                .addGroup(jPanel_bts_accionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBt_Anyadir)
                    .addComponent(jBt_Eliminar))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPn_Col1.setMaximumSize(new java.awt.Dimension(153, 326));

        jLabel2.setText("ISBN");

        jTF_ISBN.setEditable(false);

        jLabel3.setText("Materia");

        jLabel4.setText("Portada");

        jComboBox_materias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPn_Col1Layout = new javax.swing.GroupLayout(jPn_Col1);
        jPn_Col1.setLayout(jPn_Col1Layout);
        jPn_Col1Layout.setHorizontalGroup(
            jPn_Col1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPn_Col1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPn_Col1Layout.createSequentialGroup()
                .addGroup(jPn_Col1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLb_imagen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTF_ISBN, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPn_Col1Layout.createSequentialGroup()
                        .addGroup(jPn_Col1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jComboBox_materias, javax.swing.GroupLayout.Alignment.LEADING, 0, 153, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPn_Col1Layout.setVerticalGroup(
            jPn_Col1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPn_Col1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTF_ISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_materias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLb_imagen, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("TÃ­tulo");

        jTF_Titulo.setEditable(false);

        jLabel5.setText("DescripciÃ³n");

        jScrollPane1.setHorizontalScrollBar(null);

        jTA_Descrip.setEditable(false);
        jTA_Descrip.setColumns(20);
        jTA_Descrip.setLineWrap(true);
        jTA_Descrip.setRows(5);
        jScrollPane1.setViewportView(jTA_Descrip);

        javax.swing.GroupLayout jPn_Col2Layout = new javax.swing.GroupLayout(jPn_Col2);
        jPn_Col2.setLayout(jPn_Col2Layout);
        jPn_Col2Layout.setHorizontalGroup(
            jPn_Col2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPn_Col2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPn_Col2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                    .addGroup(jPn_Col2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTF_Titulo)
                    .addGroup(jPn_Col2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPn_Col2Layout.setVerticalGroup(
            jPn_Col2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPn_Col2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTF_Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPn_Col1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPn_Col2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPn_Col2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPn_Col1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanelTabLibrosLayout = new javax.swing.GroupLayout(jPanelTabLibros);
        jPanelTabLibros.setLayout(jPanelTabLibrosLayout);
        jPanelTabLibrosLayout.setHorizontalGroup(
            jPanelTabLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabLibrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTabLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTabLibrosLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanelTabLibrosLayout.createSequentialGroup()
                        .addComponent(jPanel_bts_navegacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel_bts_accion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanelTabLibrosLayout.setVerticalGroup(
            jPanelTabLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabLibrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTabLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel_bts_navegacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_bts_accion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Libros", jPanelTabLibros);

        btn_recuperar.setText("Recuperar");
        btn_recuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_recuperarActionPerformed(evt);
            }
        });

        bt_eliminarPermanente.setText("Eliminar");
        bt_eliminarPermanente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarPermanenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bt_eliminarPermanente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_recuperar))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_recuperar)
                    .addComponent(bt_eliminarPermanente))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelTabEliminadosLayout = new javax.swing.GroupLayout(jPanelTabEliminados);
        jPanelTabEliminados.setLayout(jPanelTabEliminadosLayout);
        jPanelTabEliminadosLayout.setHorizontalGroup(
            jPanelTabEliminadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabEliminadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTabEliminadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelTabEliminadosLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelTabEliminadosLayout.setVerticalGroup(
            jPanelTabEliminadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabEliminadosLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Eliminados", jPanelTabEliminados);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lb_inf.setText("lb_inf");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lb_inf)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lb_inf))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lb_hora.setText("jLabel7");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lb_hora)
                .addGap(0, 92, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lb_hora))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lb_reloj.setText("jLabel8");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lb_reloj)
                .addGap(0, 78, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lb_reloj))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBt_PrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_PrimeroActionPerformed
        // TODO add your handling code here:
        indice = 0;
        this.mostrarRegistro();
        jBt_Primero.setEnabled(false);
        jBt_Anterior.setEnabled(false);
        jBt_Ultimo.setEnabled(true);
        jBt_Siguiente.setEnabled(true);
    }//GEN-LAST:event_jBt_PrimeroActionPerformed

    private void jBt_UltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_UltimoActionPerformed
        // TODO add your handling code here:
        indice = tamanyoLista - 1;
        this.mostrarRegistro();
        jBt_Primero.setEnabled(true);
        jBt_Anterior.setEnabled(true);
        jBt_Ultimo.setEnabled(false);
        jBt_Siguiente.setEnabled(false);
    }//GEN-LAST:event_jBt_UltimoActionPerformed

    private void jBt_AnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_AnteriorActionPerformed
        // TODO add your handling code here:
        if (indice > 0) {
            indice --;
            this.mostrarRegistro();
            jBt_Ultimo.setEnabled(true);
            jBt_Siguiente.setEnabled(true);
        }
        
        if (indice == 0) {
            jBt_Primero.setEnabled(false);
            jBt_Anterior.setEnabled(false);
        }
    
    }//GEN-LAST:event_jBt_AnteriorActionPerformed

    private void jBt_SiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_SiguienteActionPerformed
        // TODO add your handling code here:
        if (indice + 1 < tamanyoLista) {
            indice++;
            this.mostrarRegistro();
            jBt_Primero.setEnabled(true);
            jBt_Anterior.setEnabled(true);
        }
        
        if (indice + 1 == tamanyoLista) {
            jBt_Ultimo.setEnabled(false);
            jBt_Siguiente.setEnabled(false);
        }
    }//GEN-LAST:event_jBt_SiguienteActionPerformed

    private void jBt_AnyadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_AnyadirActionPerformed
        // TODO add your handling code here:
        indice = 0;
        Insertar ventInt = new Insertar(listaLibros, listaMaterias);
        ventInt.setVisible(true);
        
        ventInt.addWindowListener(new WindowListener() {

            @Override
            public void windowOpened(WindowEvent we) {
            }

            @Override
            public void windowClosing(WindowEvent we) {
                
            }

            @Override
            public void windowClosed(WindowEvent we) {
                int tamanyoAnterior = tamanyoLista;
                tamanyoLista = listaLibros.size();
                if (tamanyoLista > tamanyoAnterior) {
                    indice = tamanyoLista - 1;
                    mostrarRegistro();
                    jBt_Primero.setEnabled(true);
                    jBt_Anterior.setEnabled(true);
                    jBt_Ultimo.setEnabled(false);
                    jBt_Siguiente.setEnabled(false);
                }
                
            }

            @Override
            public void windowIconified(WindowEvent we) {
            }

            @Override
            public void windowDeiconified(WindowEvent we) {
            }

            @Override
            public void windowActivated(WindowEvent we) {
            }

            @Override
            public void windowDeactivated(WindowEvent we) {
            }
        });
        
    }//GEN-LAST:event_jBt_AnyadirActionPerformed

    private void jBt_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBt_EliminarActionPerformed
        // TODO add your handling code here:
        int indiceActual = indice;
        int insertElim = 0;
        int delLibro = 0;
        Eliminado el = new Eliminado();
        Libro l = listaLibros.get(indiceActual);
        
        el.setFechaHora(anyo+"-"+mes+"-"+dia+" "+hora+":"+min+":"+sec);
        el.setISBN(l.getISBN());
        el.setTitulo(l.getTitulo());
        el.setDescripcion(l.getDescripcion());
        el.setIdMateria(l.getIdMateria());
        el.setPortada(l.getPortada());
                       
        if (insertaEliminado(el) == 1) {
            
            listaEliminados.add(el);
        
            Object[] fila = new Object[6];
            fila[0] = el.getFechaHora();
            fila[1] = el.getTitulo();
            fila[2] = el.getISBN();
            fila[3] = el.getDescripcion();
            fila[4] = el.getIdMateria();
            fila[5] = el.getPortada();
            modelo.addRow(fila);
            modelo.fireTableDataChanged();
            
            if (borrarLibro(l) == 1) {
                listaLibros.remove(indiceActual);
                indice = 0;
                mostrarRegistro();
                jBt_Primero.setEnabled(false);
                jBt_Anterior.setEnabled(false);
                jBt_Ultimo.setEnabled(true);
                jBt_Siguiente.setEnabled(true);
                
                JOptionPane.showMessageDialog(
                        this, 
                        "Libro movido a Eliminados!", 
                        "Eliminar libro", 
                        JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
        
        
        
        
    }//GEN-LAST:event_jBt_EliminarActionPerformed

    private void bt_eliminarPermanenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarPermanenteActionPerformed
        // TODO add your handling code here:
        int numFilaSel = jTable1.getSelectedRow();
        String ISBN = (String) modelo.getValueAt(numFilaSel, 2);
        int opc = JOptionPane.showConfirmDialog(
                        this,
                        "Â¿Desea eliminar definitivamente\nel libro con ISBN "+ISBN+"?", 
                        "Eliminando Libro " + ISBN, 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE
                );
        if (opc == 0) {
            if (borrarEliminado(ISBN) == 1) {
                JOptionPane.showMessageDialog(
                        this, 
                        "Libro borrado!", 
                        "Borrar libro", 
                        JOptionPane.INFORMATION_MESSAGE);
                modelo.removeRow(numFilaSel);
                modelo.fireTableDataChanged();
            }
        }
    }//GEN-LAST:event_bt_eliminarPermanenteActionPerformed

    private void btn_recuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_recuperarActionPerformed
        // TODO add your handling code here:
        Libro libro = new Libro();
        int numFilaSel = jTable1.getSelectedRow();
        libro.setTitulo((String) modelo.getValueAt(numFilaSel, 1));
        libro.setISBN((String) modelo.getValueAt(numFilaSel, 2));
        libro.setDescripcion((String) modelo.getValueAt(numFilaSel, 3));
        libro.setIdMateria((String) modelo.getValueAt(numFilaSel, 4));
        libro.setPortada((String) modelo.getValueAt(numFilaSel, 5));
        
        for (Libro lib : listaLibros) {
            if (libro.getISBN().equals(lib.getISBN())) {
                int ISBN = Integer.parseInt(libro.getISBN());
                ISBN++;
                libro.setISBN(String.valueOf(ISBN));
            }
        }
        int opc = JOptionPane.showConfirmDialog(
                        this,
                        "Â¿Desea restaurar\nel libro con ISBN "+libro.getISBN()+"?", 
                        "Reataurando Libro " + libro.getISBN(), 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE
                );
        if (opc == 0) {
            if (insertaLibro(libro) == 1) {
                borrarEliminado(libro.getISBN());
                listaLibros.add(libro);
                listaEliminados.remove(numFilaSel);
                modelo.removeRow(numFilaSel);
                modelo.fireTableDataChanged();
                
                indice = 0;
                mostrarRegistro();
                jBt_Primero.setEnabled(false);
                jBt_Anterior.setEnabled(false);
                jBt_Ultimo.setEnabled(true);
                jBt_Siguiente.setEnabled(true);
                
                JOptionPane.showMessageDialog(
                        this, 
                        "Libro restaurado!", 
                        "Restaurar libro libro", 
                        JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btn_recuperarActionPerformed

    
    // <editor-fold defaultstate="collapsed" desc="Variable Declaration - do not modify"> 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_eliminarPermanente;
    private javax.swing.JButton btn_recuperar;
    private javax.swing.JButton jBt_Anterior;
    private javax.swing.JButton jBt_Anyadir;
    private javax.swing.JButton jBt_Eliminar;
    private javax.swing.JButton jBt_Primero;
    private javax.swing.JButton jBt_Siguiente;
    private javax.swing.JButton jBt_Ultimo;
    private javax.swing.JComboBox jComboBox_materias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLb_imagen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelTabEliminados;
    private javax.swing.JPanel jPanelTabLibros;
    private javax.swing.JPanel jPanel_bts_accion;
    private javax.swing.JPanel jPanel_bts_navegacion;
    private javax.swing.JPanel jPn_Col1;
    private javax.swing.JPanel jPn_Col2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTA_Descrip;
    private javax.swing.JTextField jTF_ISBN;
    private javax.swing.JTextField jTF_Titulo;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lb_hora;
    private javax.swing.JLabel lb_inf;
    private javax.swing.JLabel lb_reloj;
    // End of variables declaration//GEN-END:variables
    // </editor-fold> 
    private void obtenerDatos() {
        try {
            listaLibros = new ListaDatosLibros().todosLosLibros();
            if (!listaLibros.isEmpty()) {
                
                listaEliminados = new ListaDatosEliminados().todosLosEliminados();
                modelo = new ModeloTablaEliminados(listaEliminados);
                jTable1.setModel(modelo);
                jTable1.setRowSelectionAllowed(true);
                
                listaMaterias = new ListaDatosMaterias().todasLasMaterias();
                if (listaMaterias.isEmpty()) {
                    JOptionPane.showMessageDialog(
                            this,
                            "No se han cargado las materias.",
                            "Error: Sin datos",
                            JOptionPane.ERROR_MESSAGE
                    );
                } else {               
                    idsMateria = new String[this.listaMaterias.size()];
                    nomsMateria = new String[this.listaMaterias.size()];
                    
                    rellenaArraysMateria();
                    
                    DefaultComboBoxModel model = new DefaultComboBoxModel(nomsMateria);
                    jComboBox_materias.setModel(model);
                    
                    this.mostrarRegistro();
                }
                
            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "No hay libros registrados\nen la BBDD.",
                        "Error: Sin datos",
                        JOptionPane.ERROR_MESSAGE
                );
            }
            
        } catch (Exception ex) {
            Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void mostrarRegistro() {
        tamanyoLista = listaLibros.size();
        Libro libro;
        libro = listaLibros.get(indice);
        jTF_ISBN.setText(libro.getISBN());
        jTF_Titulo.setText(libro.getTitulo());
        jTA_Descrip.setText(libro.getDescripcion());
        this.pintaPanel(libro);
        
        String idMateria = libro.getIdMateria();
        
        for (int i = 0; i < idsMateria.length; i++) {
            if (idMateria.equals(idsMateria[i])) {
                jComboBox_materias.setSelectedIndex(i);
            }
        }
    }
    
    private void pintaPanel(Libro libro) {
        if (!libro.getPortada().equals("Sin portada")) {
            jLb_imagen.setText("");
            String path = "/img/" + libro.getPortada();
            System.out.println(path);
            ImageIcon imagen = new ImageIcon(this.getClass().getResource(path));
            jLb_imagen.setIcon(imagen);
        } else {
            jLb_imagen.setText("Sin portada");
            jLb_imagen.setIcon(null);
        }
        
    }
    
    private void rellenaArraysMateria() {
        
        for (int i = 0; i < listaMaterias.size(); i++) {
            idsMateria[i] = listaMaterias.get(i).getIdMateria();
            nomsMateria[i] = listaMaterias.get(i).getMateria();
        }
        
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("img/ic_libro.png"));

        return retValue;
    }
    
    @Override
    public void run() {
        Thread ct = Thread.currentThread();
        while (ct == hilo) {
            calcula();
            lb_reloj.setText(hora+":"+min+":"+sec);
            lb_hora.setText(dia+"/"+mes+"/"+anyo);
            try {
                Thread.sleep(1000);
            } catch (Exception e) {
            }
            
        }
    }
    
    public void calcula () {
        Calendar cal = new GregorianCalendar();
        Date fechaHoraActual = new Date();
            
        cal.setTime(fechaHoraActual);
        ampm = cal.get(Calendar.AM_PM)==Calendar.AM?"AM":"PM";
        if(ampm.equals("PM")){
        int h = cal.get(Calendar.HOUR_OF_DAY)-12;
        hora = h>9?""+h:"0"+h;
        }else{
        hora = cal.get(Calendar.HOUR_OF_DAY)>9?""+cal.get(Calendar.HOUR_OF_DAY):"0"+cal.get(Calendar.HOUR_OF_DAY); 
        }
        min = cal.get(Calendar.MINUTE)>9?""+cal.get(Calendar.MINUTE):"0"+cal.get(Calendar.MINUTE);
        sec = cal.get(Calendar.SECOND)>9?""+cal.get(Calendar.SECOND):"0"+cal.get(Calendar.SECOND);
        
        dia = String.valueOf(cal.get(Calendar.DAY_OF_MONTH));
        mes = String.valueOf(cal.get(Calendar.MONTH));
        anyo = String.valueOf(cal.get(Calendar.YEAR));
        
    }
    
    private int borrarLibro(Libro libro){
        int insertado = 0;
        try {
            ConectaBBDD conectar = new ConectaBBDD();
            Connection conn = conectar.abrirConexion();
            insertado = new LibroDAO().borrar(conn, libro);
            conectar.cerrarConexion(conn);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                        this,
                        "Hubo un error al borrar",
                        "Error: Delete",
                        JOptionPane.ERROR_MESSAGE
                );
            
            System.out.println(ex.getMessage());
        }
        return insertado;
    }
    
    private int insertaEliminado(Eliminado el){
        int insertado = 0;
        try {
            ConectaBBDD conectar = new ConectaBBDD();
            Connection conn = conectar.abrirConexion();
            insertado = new EliminadoDAO().insertar(conn, el);
            conectar.cerrarConexion(conn);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                        this,
                        "Hubo un error al insertar",
                        "Error: Insert",
                        JOptionPane.ERROR_MESSAGE
                );
            
            System.out.println(ex.getMessage());
        }
        return insertado;
    }
    
    private int borrarEliminado(String ISBN){
        int insertado = 0;
        try {
            ConectaBBDD conectar = new ConectaBBDD();
            Connection conn = conectar.abrirConexion();
            insertado = new EliminadoDAO().borrar(conn, ISBN);
            conectar.cerrarConexion(conn);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                        this,
                        "Hubo un error al borrar",
                        "Error: Delete",
                        JOptionPane.ERROR_MESSAGE
                );
            
            System.out.println(ex.getMessage());
        }
        return insertado;
    }
    
    private int insertaLibro(Libro libro){
        int insertado = 0;
        try {
            ConectaBBDD conectar = new ConectaBBDD();
            Connection conn = conectar.abrirConexion();
            insertado = new LibroDAO().insertar(conn, libro);
            conectar.cerrarConexion(conn);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                        this,
                        "Hubo un error al insertar",
                        "Error: Insert",
                        JOptionPane.ERROR_MESSAGE
                );
            
            System.out.println(ex.getMessage());
        }
        return insertado;
    }
}
