/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package papeleralibros;

import DAO.ConectaBBDD;
import DAO.LibroDAO;
import entidades.Libro;
import entidades.Materia;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author David
 */
public class Insertar extends javax.swing.JFrame {

    private List<Libro> listaLibros;
    private List<Materia> listaMaterias;
    private Libro libro;
    private String nomPortada;
    private String[] idsMateria;
    private String[] nomsMateria;
    
    
    /**
     * Creates new form Insertar
     * @param listaLibros
     * @param listaMaterias
     */
    public Insertar(List<Libro> listaLibros, List<Materia> listaMaterias) {
        
        this.listaLibros = listaLibros;
        this.listaMaterias = listaMaterias;
        this.libro = new Libro();
        nomPortada = "Sin portada";
        libro.setPortada(nomPortada);
        
        idsMateria = new String[this.listaMaterias.size()];
        nomsMateria = new String[this.listaMaterias.size()];
        initComponents();
        
        rellenaArraysMateria();
        
        DefaultComboBoxModel model = new DefaultComboBoxModel(nomsMateria);
        jComboBox1.setModel(model);
        
        bt_aceptar.setEnabled(false);
        tf_titulo.setEditable(false);
        
        tf_ISBN.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent ke) {
                char c = ke.getKeyChar();
                if (c<'0' ||c>'9') {
                    ke.consume();
                }
                if (tf_ISBN.getText().length() == 10) {
                    ke.consume();
                } else if (tf_ISBN.getText().length() == 9) {
                    tf_titulo.setEditable(true);
                    tf_titulo.requestFocusInWindow();
                } else {
                    bt_aceptar.setEnabled(false);
                }
            }
            @Override
            public void keyPressed(KeyEvent ke) {
            }
            @Override
            public void keyReleased(KeyEvent ke) {
            }
        });
        
        tf_titulo.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent de) {
                bt_aceptar.setEnabled(true);
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                if (de.getLength() == 0) {
                    bt_aceptar.setEnabled(false);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
            }
        });
        
        
    }
    
    private boolean existeISBN() {
        boolean b = false;
        
        for (Libro libro : listaLibros) {
            if (tf_ISBN.getText().equals(libro.getISBN())) {
                b = true;
                break;
            }
        }
        
        return b;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tf_ISBN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tf_titulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_descrip = new javax.swing.JTextArea();
        bt_abrirImagen = new javax.swing.JButton();
        bt_cancelar = new javax.swing.JButton();
        bt_aceptar = new javax.swing.JButton();
        lb_img = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Insertar Libro");
        setResizable(false);

        jLabel1.setText("ISBN:");

        jLabel2.setText("Título:");

        jLabel3.setText("Descripción:");

        ta_descrip.setColumns(20);
        ta_descrip.setRows(5);
        jScrollPane1.setViewportView(ta_descrip);

        bt_abrirImagen.setText("Añadir Imágen");
        bt_abrirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_abrirImagenActionPerformed(evt);
            }
        });

        bt_cancelar.setText("Cancelar");
        bt_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelarActionPerformed(evt);
            }
        });

        bt_aceptar.setText("Aceptar");
        bt_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_aceptarActionPerformed(evt);
            }
        });

        lb_img.setText("Sin imagen");
        lb_img.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel4.setText("Materia:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bt_abrirImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bt_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 27, Short.MAX_VALUE)
                                        .addComponent(bt_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lb_img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox1, 0, 174, Short.MAX_VALUE)
                                    .addComponent(tf_ISBN)
                                    .addComponent(tf_titulo))))
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_ISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_abrirImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_img, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_cancelar)
                    .addComponent(bt_aceptar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_aceptarActionPerformed
        // TODO add your handling code here:
        if (existeISBN()) {
            JOptionPane.showMessageDialog(Insertar.this, "El ISBN introducido\nya existe", "Error ISBN", JOptionPane.ERROR_MESSAGE);
            tf_ISBN.setText(null);
            tf_titulo.setText(null);
            bt_aceptar.setEnabled(false);
            tf_titulo.setEditable(false);
        } else {
            libro.setISBN(tf_ISBN.getText());
            libro.setTitulo(tf_titulo.getText());
            if (ta_descrip.getText().equals("")) {
                int opc = JOptionPane.showConfirmDialog(
                        this,
                        "¿Desea dejar la Descripción\nen blanco?", 
                        "Descripción en blanco", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE
                );
                if (opc == 1) {
                    ta_descrip.requestFocusInWindow();
                } else {
                    libro.setDescripcion("Sin Descripción");
                    ta_descrip.setText("Sin Descripción");
                }
            } else {
                libro.setDescripcion(ta_descrip.getText());
            }
            
            libro.setIdMateria(idsMateria[jComboBox1.getSelectedIndex()]);
            
            System.out.println(libro.getISBN() + " " + libro.getTitulo() + " " + libro.getIdMateria() + " " + libro.getDescripcion() +" " + libro.getPortada());
            
            if (insertaLibro() == 1) {
                JOptionPane.showMessageDialog(this, "Libro insertado!", "Insertar libro", JOptionPane.INFORMATION_MESSAGE);
                listaLibros.add(libro);
                /** LIMPPIAR CAMPOS PARA SEGUIR INSERTANDO **/
                limpiaCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Libro no insertado!", "Error insertar libro", JOptionPane.ERROR_MESSAGE);
                this.dispose();
            }
        }
    }//GEN-LAST:event_bt_aceptarActionPerformed

    private void bt_abrirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_abrirImagenActionPerformed
        // TODO add your handling code here:
        String path = "\\src\\img";
        JFileChooser fileChooser = new JFileChooser(System.getProperty("user.dir") + path);
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JPG, PNG & GIF","jpg","png","gif");
        fileChooser.setFileFilter(filtroImagen);
        int opcion = fileChooser.showOpenDialog(null);
        if (opcion == JFileChooser.APPROVE_OPTION) {
            nomPortada = fileChooser.getSelectedFile().getName();
            libro.setPortada(nomPortada);
            String locIMG = "/img/" + nomPortada;
            System.out.println(locIMG);
            lb_img.setText("");
            ImageIcon imagen = new ImageIcon(this.getClass().getResource(locIMG));
            lb_img.setIcon(imagen);
        }
    }//GEN-LAST:event_bt_abrirImagenActionPerformed

    private void bt_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_bt_cancelarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_abrirImagen;
    private javax.swing.JButton bt_aceptar;
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_img;
    private javax.swing.JTextArea ta_descrip;
    private javax.swing.JTextField tf_ISBN;
    private javax.swing.JTextField tf_titulo;
    // End of variables declaration//GEN-END:variables

    private void rellenaArraysMateria() {
        
        for (int i = 0; i < listaMaterias.size(); i++) {
            idsMateria[i] = listaMaterias.get(i).getIdMateria();
            nomsMateria[i] = listaMaterias.get(i).getMateria();
        }
        
    }
    
    private int insertaLibro(){
        int insertado = 0;
        try {
            ConectaBBDD conectar = new ConectaBBDD();
            Connection conn = conectar.abrirConexion();
            insertado = new LibroDAO().insertar(conn, libro);
            conectar.cerrarConexion(conn);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                        this,
                        "Hubo un error al insertar",
                        "Error: Insert",
                        JOptionPane.ERROR_MESSAGE
                );
            
            System.out.println(ex.getMessage());
        }
        return insertado;
    }

    private void limpiaCampos() {
        
        tf_ISBN.setText(null);
        tf_titulo.setText(null);
        tf_titulo.setEditable(false);
        jComboBox1.setSelectedIndex(0);
        ta_descrip.setText(null);
        lb_img.setIcon(null);
        lb_img.setText("Sin portada");
        bt_aceptar.setEnabled(false);
        
    }

}
